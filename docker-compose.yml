version: '3.8'

services:
  db:
      build:
        context: ./db
        dockerfile: Dockerfile
      container_name: postgres_container
      environment:
        POSTGRES_DB: ${DB_DATABASE}
        POSTGRES_USER: ${DB_USER}
        POSTGRES_PASSWORD: ${DB_PASSWORD}
      ports:
        - "5432:5432"
      volumes:
        - pgdata:/var/lib/postgresql

  db_replica:
    build:
      context: ./db_repl
      dockerfile: Dockerfile
    container_name: postgres_replica
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST: ${DB_HOST}
      POSTGRES_PORT: ${DB_PORT}
      DB_REPL_USER: ${DB_REPL_USER}
      DB_REPL_PASSWORD: ${DB_REPL_PASSWORD}
      PGPASSWORD: 123
    command: |
      bash -c "
        until pg_isready -h db -p 5432 -U replicator; do
          sleep 1;
        done;
        pg_basebackup --host=db --username=replicator --pgdata=/var/lib/postgresql/data -v -P --wal-method=stream;
      "
    ports:
      - "5433:5432"
    volumes:
      - pgdata_replica:/var/lib/postgresql
    depends_on:
      - db


  bot:
    image: bot_image
    build:
      context: ./bot
      dockerfile: Dockerfile
    working_dir: /app
    volumes:
      - ./bot:/app
      - ./.env:/app/.env
    environment:
      ENV_FILE_LOCATION: /app/.env
    command: ["python", "lab.py"]
    depends_on:
      - db

volumes:
  pgdata:
  pgdata_replica: